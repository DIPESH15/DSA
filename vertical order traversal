vector<vector<int>> verticalTraversal(TreeNode *root) {
    if (!root) return {};

    map<int, map<int, vector<int>>> nodes;
   
    queue<pair<TreeNode*, pair<int, int>>> q;
    q.push({root, {0, 0}});

    while (!q.empty()) {
        auto p = q.front();
        q.pop();

        TreeNode* node = p.first;
        int level = p.second.first;
        int horizontalDist = p.second.second;

        nodes[horizontalDist][level].push_back(node->data);

        if (node->left) {
            q.push({node->left, {level + 1, horizontalDist - 1}});
        }

        if (node->right) {
            q.push({node->right, {level + 1, horizontalDist + 1}});
        }
    }

    vector<vector<int>> result;
    for (auto& p : nodes) {
        vector<int> col;
        for (auto& q : p.second) {
            sort(q.second.begin(), q.second.end());
            col.insert(col.end(), q.second.begin(), q.second.end());
        }
        result.push_back(col);
    }

    return result;
}
