#include <bits/stdc++.h>
using namespace std;
#define int long long
int n;
int a[200005];
int t[800020];

void build(int ind, int l, int r)
{
    if (l == r)
    {
        t[ind] = a[l];
        return;
    }
    int mid = (l + r) / 2;
    build(ind * 2, l, mid);
    build(ind * 2 + 1, mid + 1, r);
    t[ind] = t[ind * 2] + t[ind * 2 + 1];
}

void update(int ind, int l, int r, int pos, int val)
{
    if (pos < l || pos > r)
        return;
    if (l == r)
    {
        t[ind] = val;
        a[l] = val;
        return;
    }
    int mid = (l + r) / 2;
    update(ind * 2, l, mid, pos, val);
    update(ind * 2 + 1, mid + 1, r, pos, val);
    t[ind] = t[ind * 2] + t[ind * 2 + 1];
}

int query(int ind, int l, int r, int lq, int rq)
{
    if (l > rq || lq > r)
        return 0;
    if (lq <= l && r <= rq)
        return t[ind];
    int mid = (l + r) / 2;
    return query(ind * 2, l, mid, lq, rq) + query(ind * 2 + 1, mid + 1, r, lq, rq);
}

void solve() {
    int q;
    cin>>n>>q;
    
    for(int i=1;i<=n;i++){
        cin>>a[i];
    }
    build(1,1,n);
    while(q--){
        int b;
        cin>>b;
        if(b==1){
            int i,x;
            cin>>i>>x;
            update(1,1,n,i,x);
        }else{
            int i,j;
            cin>>i>>j;
            cout<<query(1,1,n,i,j)<<endl;
        }
    }return;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int t=1;
    //cin >> t;
    while (t--) {
        solve();
    }
    
    return 0;
}
